[logging]
# User's preferred default verbosity. Overrides system default of "normal".
# Valid values are "verbose", "normal", "quiet" and "quieter".
default_verbosity = "normal"

[colors]
# Color support override. Sets the terminal's color support level. The alternative is
# to leave it up to thag_rs, which depending on the platform may call 3rd-party crates
# to interrogate the terminal, which could cause misbehaviour, or may choose a default,
# which might not take advantage of the full capabilities of the terminal.
# If the terminal can't handle your chosen level, this may cause unwanted control strings
# to be interleaved with the messages.
# If your terminal can handle 16m colors, choose xterm256
# Valid values are:
# "xterm256" for 256 or more colors (including 16m)
# "ansi16"   for basic color support
# "none"     no color support or no color desired
color_support = "xterm256"

# Terminal light/dark override. Tells thag_rs whether you are using a light or dark theme,
# instead of letting thag_rs interrogate the terminal, which could cause misbehaviour
# on Windows in particular, or choose a default, which if incorrect could compromise the
# legibility of text.
# Valid values are: "dark" or "light".
# "dark" is generally a safe choice as the colors should be legible even for a light theme
# term_theme = "dark"

[proc_macros]
# Allows user to specify a manifest directory path for the thag_demo_proc_macro crate. This is
# a prerequisite for the `thag_rs` proc-macros feature.
#
# Specify a valid absolute or relative path string if required, e.g. "/Users/thag/projects/thag_rs/demo/proc_macros/Cargo.toml".
# Relative paths should be relative to the current working directory.
# A single forward slash is the required path separator in all environments including Windows.
# Default value: "demo/proc_macros".
# proc_macro_crate_path = "/Users/donf/projects/thag_rs/demo/proc_macros"
# proc_macro_crate_path = "demo/proc_macros"

[misc]
# User's preferred text unquote behaviour. By default, thag_rs will not strip double quotes
# from text values returned by snippets. Setting this to true will override this behaviour.
# In turn, this user default may be overridden on the command line by specifying --unquote
# (-u) true/false (default true).
# This behaviour only applies to snippets that explicitly or implicitly return a string
# value. It does not affect well-formed programs or println! statements in snippets.
# Valid values are: "true" or "false" (default).
unquote = "true"

[dependencies]
# Exclude features containing "unstable"
exclude_unstable_features = true
# Exclude the "std" feature
exclude_std_feature = true
# Use detailed dependency specifications with all features
use_detailed_dependencies = true
# Feature organization
group_related_features = true
show_feature_dependencies = true
# Global feature exclusions
global_excluded_features = [
    "default",
    "experimental",
    "unstable",
    "nightly",
    "sqlite",
]
# Always include these features even if they match exclude patterns
always_include_features = ["derive"]
# Crate-specific feature handling
[dependencies.feature_overrides.rustyline]
excluded_features = ["with-sqlite-history"]
required_features = ["with-file-history"]
alternative_features = ["with-file-history"]
[dependencies.feature_overrides.tokio]
excluded_features = ["unstable-async-driver"]
required_features = ["rt", "macros"]
alternative_features = []
