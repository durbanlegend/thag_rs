[logging]
# User's preferred default verbosity. Overrides system default of "normal".
# Valid values are "debug", "verbose", "normal", "quiet" and "quieter".
default_verbosity = "normal"

# Terminal color settings
[colors]
# Color support override. Sets the terminal's color support level. The alternative is
# to leave it up to thag_rs, which depending on the platform may call 3rd-party crates
# to interrogate the terminal, which could cause misbehaviour, or may choose a default,
# which might not take advantage of the full capabilities of the terminal.
# If the terminal can't handle your chosen level, this may cause unwanted control strings
# to be interleaved with the messages.
# If your terminal can handle 16m colors, choose color256.
# The aliases are the legacy names.
# Available options for ColorSupport:
#   true_color - Full color support, 24 bits -> 16 million colors.
#   color256 (alias xterm256) - 256-color support, suitable for color palettes of 256 colours (16 bit).
#   basic (alias ansi16) - Basic 16-color support
#   none - No color support
#   undetermined - Still to be determined or defaulted

# Terminal light/dark override. Tells thag_rs whether you are using a light or dark theme,
# instead of letting thag_rs interrogate the terminal, which could cause misbehaviour
# on Windows in particular, or choose a default, which if incorrect could compromise the
# legibility of text.
# Valid values are: "dark" or "light".
# "dark" is generally a safe choice as the colors should be legible even for a light theme
# term_bg_luma = "dark"

# Message theme preferences for light backgrounds
preferred_light = [
    "gruvbox_light_hard",
    "summercamp",
    "catppuccin-latte",
    "atelier-seaside-light_base16",
    "solarized_light",
]

# Message theme preferences for dark backgrounds
preferred_dark = [
    "espresso",
    "catppuccin-mocha",
    "catppuccin-frappe",
    "s3r0_modified",
    "monokai_base16",
    "dracula_official",
    "gruvbox-dark-hard_base16",
    "gruvbox-dark-soft_base16",
]

# Message theme fallback preferences for light backgrounds
fallback_light = ["github_256", "basic_light"]
# Message theme fallback preferences for dark backgrounds
fallback_dark = ["catppuccin-mocha_256", "basic_dark"]
auto_detect = true
custom_themes_dir = "~/.config/thag/themes"

# Demo proc macro settings
[proc_macros]
# Allows user to specify manifest directory paths for the thag_demo_proc_macro crate and the
# internal `bank` equivalent. This is a prerequisite for the `thag_rs` proc-macros feature.
#
# Specify a valid absolute or relative path string if required, e.g. "/Users/thag/projects/thag_rs/demo/proc_macros/Cargo.toml".
# Relative paths should be relative to the current working directory.
# A single forward slash is the required path separator in all environments including Windows.
# Default value: "<dir>/proc_macros".
bank_proc_macro_crate_path = "bank/proc_macros"
demo_proc_macro_crate_path = "demo/proc_macros"

# Dependency handling
[dependencies]

# Specifies to what extent `thag_rs` should intervene in inferring dependencies from references to crates
# in the script code, including but not limited to imports (`use` statements).
# Options are "maximal", "minimal", "config" (recommended) and "none".
# Default is "config". It has sensible settings built into the default config.toml for some popular crates.
inference_level = "config"

# Exclude features containing "unstable"
exclude_unstable_features = true

# Exclude the "std" feature
exclude_std_feature = true

# Always include these features even if they match exclude patterns
always_include_features = ["derive"]

# Global feature exclusions
global_excluded_features = [
    "default",
    "experimental",
    "unstable",
    "nightly",
    "sqlite",
]

# Crate-specific feature handling
[dependencies.feature_overrides.async-std]
required_features = ["attributes"]

[dependencies.feature_overrides.clap]
required_features = ["cargo", "derive"]

[dependencies.feature_overrides.hyper]
required_features = ["full"]

[dependencies.feature_overrides.iced]
required_features = ["image", "debug"]

[dependencies.feature_overrides.nanorand]
required_features = ["getrandom"]

[dependencies.feature_overrides.nu-ansi-term]
required_features = ["derive_serde_style"]

[dependencies.feature_overrides.owo-colors]
required_features = ["supports-colors"]

[dependencies.feature_overrides.phf]
required_features = ["macros"]

[dependencies.feature_overrides.proc-macro2]
required_features = ["span-locations"]

[dependencies.feature_overrides.ratatui]
required_features = ["crossterm"]

[dependencies.feature_overrides.reqwest]
required_features = ["blocking", "json"]

[dependencies.feature_overrides.rug]
required_features = ["integer", "std"]

[dependencies.feature_overrides.rustyline]
excluded_features = ["with-sqlite-history"]
required_features = [""]

[dependencies.feature_overrides.spin1]
required_features = ["mutex"]

[dependencies.feature_overrides.strum]
required_features = ["derive"]

[dependencies.feature_overrides.syn]
required_features = [
    "extra-traits",
    "fold",
    "full",
    "parsing",
    "visit",
    "visit-mut",
]

[dependencies.feature_overrides.thag_rs]
required_features = ["core", "simplelog"]
default_features = false

[dependencies.feature_overrides.tokio]
excluded_features = ["unstable-async-driver"]
required_features = ["full"]

[dependencies.feature_overrides.tui-textarea]
required_features = ["crossterm", "search"]

[dependencies.feature_overrides.winapi]
required_features = ["consoleapi", "processenv", "winbase"]

[misc]
# User's preferred text unquote behaviour. By default, thag_rs will not strip double quotes
# from text values returned by snippets. Setting this to true will override this behaviour.
# In turn, this user default may be overridden on the command line by specifying --unquote
# (-u) true/false (default true).
# This behaviour only applies to snippets that explicitly or implicitly return a string
# value. It does not affect well-formed programs or println! statements in snippets.
# Valid values are: "true" or "false" (default).
# unquote = false
