[package]
description = "A versatile cross-platform script runner and REPL for Rust snippets, expressions and programs.\nAccepts a script file or dynamic options."
name = "thag_rs"
version = "0.1.9"
authors = ["Don Forbes <don.forbes3@gmail.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
# Include the demo directory in the crate packagename = "thag_rs"
include = [
    "assets/default_config.toml",
    "src/**",
    "Cargo.toml",
    "README.md",
    "build.rs",
    "demo/**",
    "tests/**",
]
readme = "README.md"
repository = "https://github.com/durbanlegend/thag_rs"
categories = ["command-line-utilities", "development-tools::build-utils"]
keywords = ["REPL", "command-line", "eval", "runner", "script"]

[package.metadata.wix]
upgrade-guid = "FA5CCD40-AB09-488D-817D-867B69E10F7B"
path-guid = "CCDE9D5F-06C2-42C2-8BF7-6EB41E46A496"
license = false
eula = false

[dependencies]
bitflags = "2.8.0"
cargo-lookup = "0.1.0"
cargo_toml = "0.21.0"
clap = { version = "4.5.29", features = ["cargo", "derive"] }
crossterm = { version = "0.28.1", features = ["use-dev-tty"] }
dirs = "6.0.0"
documented = "0.9.1"
edit = "0.1.5"
env_logger = { version = "0.11.6", optional = true }
# To switch off, use version without features = ["enable_system_time"]
# If on, prepare for function to run twice for some reason!
firestorm = "0.5.1"
# firestorm = { version = "0.5.1", features = ["enable_system_time"] }
home = "0.5.11"
log = "0.4.25"
mockall = "0.13.1"
nu-ansi-term = "0.50.1"
phf = "0.11.3"
prettyplease = "0.2.29"
proc-macro2 = "1.0.93"
quote = "1.0.38"
ratatui = "0.29.0"
reedline = "0.38.0"
regex = "1.11.1"
scopeguard = "1.2.0"
semver = "1.0.25"
serde = { version = "1.0.217", features = ["derive"] }
serde_json = "1.0.138"
serde_merge = "0.1.3"
serde_with = "3.12.0"
side-by-side-diff = "0.1.2"
simplelog = { version = "0.12.2", optional = true }
strict = "0.2.0"
strum = { version = "0.27.1", features = ["derive", "phf"] }
supports-color = "3.0.2"
syn = { version = "2.0.98", features = [
    "extra-traits",
    "full",
    "visit",
    "visit-mut",
] }
termbg = "0.6.2"
thag_proc_macros = { version = "0.1.1", path = "src/proc_macros" }
toml = "0.8.20"
toml_edit = "0.22.24"
tui-textarea = { version = "0.7", features = ["crossterm", "search"] }
[target.'cfg(windows)'.dependencies]
win32console = "0.1.5"
winapi = "0.3.9"

[profile.dev]
opt-level = 1           # Use slightly better optimizations.
debug = true
debug-assertions = true

[profile.release]
debug = false

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[lib]
name = "thag_rs"
path = "src/lib.rs"

[[bin]]
name = "thag"
path = "src/bin/thag_rs.rs"

[features]
debug-logs = []
nightly = []
default = ["simplelog"]
format_snippet = []

[dev-dependencies]
assert_cmd = "2.0.16"
criterion = "0.5.1"
either = "1.13.0"
env_logger = "0.11.6"
lazy_static = "1.5.0"
predicates = "3.1.3"
sequential-test = "0.2.4"
tempfile = "3.16.0"
test-generator = "0.3.1"

[[bench]]
name = "filter_bench"
harness = false

[workspace]
members = ["src/proc_macros"]
exclude = ["demo/proc_macros"]

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.21.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "x86_64-unknown-linux-musl",
    "x86_64-pc-windows-msvc",
]
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false
# Trigger releases manually instead of on tag-push (DHF temp)
# dispatch-releases = false
#
[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["demo.zip"]
build = ["sh", "-c", "zip demo.zip demo/*"]

[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["assets/default_config.toml"]
# no-op:
build = ["true"]
